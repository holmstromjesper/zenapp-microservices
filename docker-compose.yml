version: '2.1'
services:

  ############################################## user service ##############################################

  usermongodb:
    container_name: usermongodb
    build: ./userService/db
    volumes:
      - /data/db
    ports: 
      - 27017:27017
    # command: --quiet
    # healthcheck:
    #   test: exit 0

  userservice:
    image: userservice
    build: ./userService
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    volumes: 
      - "./userService:/src/app"
      - "./userService/package.json:/src/package.json"
    depends_on:
      - usermongodb
    links: 
      - usermongodb

  ############################################## subscription service ##############################################

  # subscriptionmongodb:
  #   container_name: subscriptionmongodb
  #   build: ./subscriptionService/db
  #   volumes:
  #     - /data/db
  #   ports: 
  #     - 27018:27017
  #   # command: --quiet
  #   # healthcheck:
  #   #   test: exit 0

  # subscriptionservice:
  #   image: subscriptionservice
  #   build: ./subscriptionService
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3001:3000
  #   volumes: 
  #     - "./subscriptionService:/src/app"
  #     - "./subscriptionService/package.json:/src/package.json"
  #   depends_on:
  #     - subscriptionmongodb
  #   links: 
  #     - subscriptionmongodb

############################################## position service ##############################################

  # positionmongodb:
  #   container_name: positionmongodb
  #   build: ./positionService/db
  #   volumes:
  #     - /data/db
  #   ports: 
  #     - 27019:27017
  #   # command: --quiet
  #   # healthcheck:
  #   #   test: exit 0

  # positionservice:
  #   image: positionservice
  #   build: ./positionService
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3002:3000
  #   volumes: 
  #     - "./positionService:/src/app"
  #     - "./positionService/package.json:/src/package.json"
  #   depends_on:
  #     - positionmongodb
  #   links: 
  #     - positionmongodb

  ############################################## thirdparty service ##############################################

  # thirdpartyservicemongodb:
  #   container_name: thirdpartyservicemongodb
  #   build: ./thirdpartyService/db
  #   volumes:
  #     - /data/db
  #   ports: 
  #     - 27020:27017
  #   # command: --quiet
  #   # healthcheck:
  #   #   test: exit 0

  # thirdpartyservice:
  #   image: thirdpartyservice
  #   build: ./thirdpartyService
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3003:3000
  #   volumes: 
  #     - "./thirdpartyService:/src/app"
  #     - "./thirdpartyService/package.json:/src/package.json"
  #   depends_on:
  #     - thirdpartyservicemongodb
  #   links: 
  #     - thirdpartyservicemongodb

  ############################################## API COMPOSER SERVICE ##############################################
  # apicomposer:
  #   image: apicomposerservice
  #   build: ./apiComposerService
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3004:3000
  #   volumes: 
  #     - "./apiComposerService:/src/app"
  #     - "./apiComposerService/package.json:/src/package.json"
  #   depends_on:
  #     - thirdpartyservice
  #     - userservice
  #     - positionservice
  #   links: 
  #     - thirdpartyservice
  #     - userservice
  #     - positionservice

  ############################################## example carwash service ##############################################
  # carwashservice:
  #   image: carwashservice
  #   build: ./carwashService
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3005:3000
  #   volumes: 
  #     - "./carwashService:/src/app"
  #     - "./carwashService/package.json:/src/package.json"
